pragma solidity 0.8.0;
import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/296223f876924da18b5aadd3343f4e2324f6176c/contracts/utils/math/SafeMath.sol";

contract Bank{
    using SafeMath for uint; // Importation de la library SafeMath et application de son utilisation au type uint.
    mapping (address => uint) _balances; // Mapping _balances pour stocker le solde detenu par un compte.
    
    // Permet d'effectuer un dépôt
    function deposit(uint _amout) public{
        _balances[msg.sender] = _balances[msg.sender].add(_amout); // Ajout de ".add" qui correspond à l'opéraeur + dans la library SafeMath.
    }
    
    // Permet d'effectuer un transfert
    function transfer(address _recipient, uint _amount) public{
       _balances[_recipient] = _balances[_recipient].add(_amount); // Permet d'ajouter le montant avec ".add".
       _balances[msg.sender] = _balances[msg.sender].sub(_amount);// Permet de soustraire le montant avec ".sub" qui correspond à l'opéraeur - dans la library SafeMath.
    }
    
    // Permet de consulter la balance
    function BalanceOf() public view returns (uint){
        return _balances[msg.sender];
    }
}
